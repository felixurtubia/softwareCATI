{
  "name": "angular-spinner",
  "version": "0.8.1",
  "repository": {
    "type": "git",
    "url": "http://github.com/urish/angular-spinner.git"
  },
  "main": "angular-spinner.js",
  "dependencies": {
    "spin.js": "^2.0.0"
  },
  "license": "MIT",
  "devDependencies": {
    "grunt": "0.4.5",
    "load-grunt-tasks": "3.2.0",
    "grunt-contrib-jshint": "0.11.3",
    "grunt-contrib-uglify": "0.9.2",
    "grunt-karma": "0.12.0",
    "karma": "0.13.9",
    "karma-coverage": "0.5.2",
    "karma-jasmine": "0.3.6",
    "karma-phantomjs-launcher": "0.2.1",
    "coveralls": "2.11.4"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "readme": "# angular-spinner\r\n\r\nAngular directive to show an animated spinner (using [spin.js](http://fgnass.github.io/spin.js/))\r\n\r\nCopyright (C) 2013, 2014, 2015, 2016, Uri Shaked <uri@urish.org>.\r\n\r\n[![Build Status](https://travis-ci.org/urish/angular-spinner.png?branch=master)](https://travis-ci.org/urish/angular-spinner)\r\n[![Coverage Status](https://coveralls.io/repos/urish/angular-spinner/badge.png)](https://coveralls.io/r/urish/angular-spinner)\r\n\r\n## Usage\r\n\r\nGet both spin.js and angular-spinner\r\n\r\n- via npm: by running ``` $ npm install angular-spinner ``` from your console\r\n- or via Bower: by running ``` $ bower install angular-spinner ``` from your console\r\n\r\nInclude both spin.js and angular-spinner.js in your application.\r\n\r\n```html\r\n<script src=\"bower_components/spin.js/spin.js\"></script>\r\n<script src=\"bower_components/angular-spinner/angular-spinner.js\"></script>\r\n```\r\n\r\nAdd the module `angularSpinner` as a dependency to your app module:\r\n\r\n```js\r\nvar myapp = angular.module('myapp', ['angularSpinner']);\r\n```\r\n\r\nYou can now start using the us-spinner directive to display an animated\r\nspinner. For example :\r\n\r\n```html\r\n<span us-spinner></span>\r\n```\r\n\r\nYou can also pass spinner options, for example:\r\n\r\n```html\r\n<span us-spinner=\"{radius:30, width:8, length: 16}\"></span>\r\n```\r\n\r\nPossible configuration options are described in the [spin.js homepage](http://fgnass.github.io/spin.js/).\r\n\r\nYou can direct the spinner to start and stop based on a scope expression, for example:\r\n\r\n```html\r\n<span us-spinner=\"{radius:30, width:8, length: 16}\" spinner-on=\"showSpinner\"></span>\r\n```\r\n\r\n\r\n### Configuring default spinner options\r\n\r\nYou can use `usSpinnerConfigProvider` to configure default options for all spinners globally. Any options passed from a directive still override these.\r\n\r\n```js\r\nmyapp.config(['usSpinnerConfigProvider', function (usSpinnerConfigProvider) {\r\n    usSpinnerConfigProvider.setDefaults({color: 'blue'});\r\n}]);\r\n```\r\n\r\n## Themes\r\n\r\nThemes provide named default options for spinners. Any options passed from a directive still override these.\r\n\r\n```js\r\nmyapp.config(['usSpinnerConfigProvider', function (usSpinnerConfigProvider) {\r\n    usSpinnerConfigProvider.setTheme('bigBlue', {color: 'blue', radius: 20});\r\n    usSpinnerConfigProvider.setTheme('smallRed', {color: 'red', radius: 6});\r\n}]);\r\n```\r\n\r\n```html\r\n<span us-spinner spinner-theme=\"smallRed\"></span>\r\n```\r\n\r\n### Using the usSpinnerService to control spinners\r\n\r\n```html\r\n<button ng-click=\"startSpin()\">Start spinner</button>\r\n<button ng-click=\"stopSpin()\">Stop spinner</button>\r\n\r\n<span us-spinner spinner-key=\"spinner-1\"></span>\r\n```\r\n\r\nThe `usSpinnerService` service let you control spin start and stop :\r\n\r\n```js\r\napp.controller('MyController', ['$scope', 'usSpinnerService', function($scope, usSpinnerService){\r\n    $scope.startSpin = function(){\r\n        usSpinnerService.spin('spinner-1');\r\n    }\r\n    $scope.stopSpin = function(){\r\n        usSpinnerService.stop('spinner-1');\r\n    }\r\n}]);\r\n```\r\n\r\nNote that when you specify a key, the spinner is rendered inactive.\r\nYou can still render the spinner as active with the spinner-start-active parameter :\r\n```html\r\n<span us-spinner spinner-key=\"spinner-1\" spinner-start-active=\"true\"></span>\r\n```\r\n\r\nspinner-start-active is ignored if spinner-on is specified.\r\n\r\nThe spinner-key will be used as an identifier (not unique) allowing you to have several spinners controlled by the same key :\r\n\r\n```html\r\n<span us-spinner spinner-key=\"spinner-1\"></span>\r\n<span us-spinner spinner-key=\"spinner-2\"></span>\r\n\r\n... random html code ...\r\n\r\n<!-- This spinner will be triggered along with the first \"spinner-1\" -->\r\n<span us-spinner spinner-key=\"spinner-1\"></span>\r\n```\r\n\r\n### Example\r\n\r\nSee [online example on Plunker](http://plnkr.co/edit/BGLUYcylbIVJRz6ztbhf?p=preview).\r\n\r\n## License\r\n\r\nReleased under the terms of MIT License.\r\n\r\n## Contributing\r\n\r\n1. Fork repo.\r\n2. `npm install`\r\n3. `bower install`\r\n4. Make your changes, add your tests.\r\n5. `grunt test`\r\n6. `grunt build` once all tests are passing. Commit, push, PR.\r\n",
  "readmeFilename": "README.md",
  "description": "Angular directive to show an animated spinner (using [spin.js](http://fgnass.github.io/spin.js/))",
  "bugs": {
    "url": "https://github.com/urish/angular-spinner/issues"
  },
  "_id": "angular-spinner@0.8.1",
  "_from": "angular-spinner@^0.8.0"
}
